swagger: "2.0"
info:
  title: User Authentication API
  version: "1.0"

tags:
  - user
summary: Authenticate a user
description: Authenticate a user with their email and password.
parameters:
  - in: header
    name: Authorization
    schema:
      type: string
    required: true
    description: The JWT token to authorize API requests. Format "Bearer {token}"
  - name: body
    in: body
    required: true
    schema:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: "user@example.com"
        password:
          type: string
          example: "Strong@password123"
responses:
  200:
    description: Successful authentication
    schema:
      type: object
      properties:
        id:
          type: string
          example: "1"
        email:
          type: string
          example: "user@example.com"
        username:
          type: string
          example: "john_doe"
        created_at:
          type: string
          example: "2024-08-30T12:34:56.789Z"
        updated_at:
          type: string
          example: "2024-08-30T12:34:56.789Z"
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjEiLCJlbWFpbCI6ImFkbWluQGFkbWluLmNvbSIsImlhdCI6MTY4NDYyNjYzMiwiZXhwIjoxNjg0NjI3MjMyfQ.XiN0yZz5L0VnT6Y3B8N9tKj7lXNwYUeL9kR0qH8sKw"
  400:
    description: Bad Request (e.g., missing email or password)
    schema:
      type: object
      properties:
        message:
          type: string
          example: "Not a JSON or missing email/password"
  401:
    description: Unauthorized (Invalid credentials)
    schema:
      type: object
      properties:
        message:
          type: string
          example: "Invalid credentials"
